// veo.js // Goat Bot v2 style command: /veo [prompt] // Generates a video using mahbub-ullash.cyberbot.top txt2video API // Author: MOHAMMAD AKASH

const axios = require("axios"); const fs = require("fs-extra"); const path = require("path");

module.exports = { config: { name: "veo", version: "1.2.0", author: "MOHAMMAD AKASH", role: 0, countDown: 5, shortDescription: "Generate a video from a text prompt üé¨", longDescription: "Use /veo [prompt] to generate a short AI video using mahbub-ullash API.", category: "ai-video" },

onStart: async function ({ api, event, args }) { try { const prompt = args.join(" ").trim(); if (!prompt) { return api.sendMessage( "‚ùå ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /veo <prompt>\n‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: /veo A cute girl dancing in rain ‚òî", event.threadID, event.messageID ); }

const msg = await api.sendMessage(
    "üé• ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...",
    event.threadID
  );

  const apiUrl = `https://mahbub-ullash.cyberbot.top/api/txt2video?prompt=${encodeURIComponent(prompt)}`;

  const response = await axios.get(apiUrl);
  const data = response.data || {};

  if (!data.status || !data.video) {
    return api.sendMessage(
      "‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø! API ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶†‡¶ø‡¶ï ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§",
      event.threadID,
      msg.messageID
    );
  }

  const videoUrl = data.video;
  const filePath = path.join(__dirname, `veo_${Date.now()}.mp4`);

  const videoStream = await axios.get(videoUrl, { responseType: "stream" });
  const writer = fs.createWriteStream(filePath);
  videoStream.data.pipe(writer);

  await new Promise((resolve, reject) => {
    writer.on("finish", resolve);
    writer.on("error", reject);
  });

  await api.sendMessage(
    {
      body: `‚úÖ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶§‡ßà‡¶∞‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®!\nüé¨ Prompt: ${prompt}\nüë®‚Äçüíª Operator: ${data.operator || 'Unknown'}`,
      attachment: fs.createReadStream(filePath)
    },
    event.threadID,
    () => fs.unlinkSync(filePath)
  );
} catch (err) {
  console.error(err);
  return api.sendMessage(
    `‚ùå ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá: ${err.message}`,
    event.threadID,
    event.messageID
  );
}

} };
